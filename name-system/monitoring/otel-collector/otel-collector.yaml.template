receivers:
    prometheus:
        config:
            global:
                scrape_interval: 15s
                scrape_timeout: 10s
                evaluation_interval: 15s

            scrape_configs:
                -   job_name: 'infrastructure'
                    static_configs:
                        -   targets:
                                - '$NAME_NODE_EXPORTER_CONTAINER_NAME:9100'
                                - '$NAME_CADVISOR_CONTAINER_NAME:8080'
                    relabel_configs:
                        -   source_labels: [ __address__ ]
                            regex: '.*node_exporter.*'
                            target_label: job
                            replacement: 'node'
                        -   source_labels: [ __address__ ]
                            regex: '.*cadvisor.*'
                            target_label: job
                            replacement: 'cadvisor'

                -   job_name: 'postgres'
                    static_configs:
                        -   targets:
                                - '$NAME_ACCOUNT_POSTGRES_EXPORTER_CONTAINER_NAME:9187'
                                - '$NAME_AUTHORIZATION_POSTGRES_EXPORTER_CONTAINER_NAME:9187'

                    relabel_configs:
                        -   source_labels: [ __address__ ]
                            regex: '(.+?)_exporter_(.+?)_.*:.*'
                            target_label: database
                            replacement: '$2'
                        -   source_labels: [ __address__ ]
                            target_label: instance
                            regex: '([^:]+):.*'
                            replacement: '$1'

                -   job_name: 'redis'
                    static_configs:
                        -   targets: [ '$NAME_MONITORING_REDIS_EXPORTER_CONTAINER_NAME:9121' ]
                    relabel_configs:
                        -   source_labels: [ __address__ ]
                            target_label: instance
                            regex: '([^:]+):.*'
                            replacement: '$NAME_MONITORING_REDIS_EXPORTER_CONTAINER_NAME'

    otlp:
        protocols:
            grpc:
                endpoint: 0.0.0.0:$NAME_OTEL_COLLECTOR_GRPC_PORT
            http:
                endpoint: 0.0.0.0:$NAME_OTEL_COLLECTOR_HTTP_PORT
                include_metadata: true

    prometheus/internal:
        config:
            scrape_configs:
                -   job_name: 'otel-collector'
                    scrape_interval: 10s
                    static_configs:
                        -   targets: [ '0.0.0.0:8888' ]

processors:
    batch/logs:
        send_batch_size: 512
        timeout: 1s
        send_batch_max_size: 1024

    batch/metrics:
        send_batch_size: 1024
        timeout: 5s
        send_batch_max_size: 2048

    batch/traces:
        send_batch_size: 256
        timeout: 1s
        send_batch_max_size: 512

    memory_limiter:
        check_interval: 1s
        limit_mib: 512
        spike_limit_mib: 128

    resource/cleanup:
        attributes:
            -   key: "telemetry.sdk.language"
                action: delete
            -   key: "telemetry.sdk.name"
                action: delete
            -   key: "telemetry.sdk.version"
                action: delete
            -   key: "deployment.environment"
                action: delete

    attributes/cleanup:
        actions:
            -   key: "code.file.path"
                action: delete
            -   key: "code.function.name"
                action: delete
            -   key: "code.line.number"
                action: delete

exporters:
    prometheusremotewrite:
        endpoint: http://$NAME_VICTORIA_METRICS_CONTAINER_NAME:$NAME_VICTORIA_METRICS_HTTP_PORT/api/v1/write
        send_metadata: true
        add_metric_suffixes: false
        timeout: 30s
        resource_to_telemetry_conversion:
            enabled: true
        retry_on_failure:
            enabled: true
            initial_interval: 5s
            max_interval: 30s
            max_elapsed_time: 300s

    otlp/tempo:
        endpoint: $NAME_TEMPO_CONTAINER_NAME:$NAME_TEMPO_OTLP_GRPC_PORT
        tls:
            insecure: true
        retry_on_failure:
            enabled: true
        sending_queue:
            enabled: true

    otlphttp/loki:
        endpoint: http://$NAME_LOKI_CONTAINER_NAME:$NAME_LOKI_HTTP_PORT/otlp
        retry_on_failure:
            enabled: true
            initial_interval: 5s
            max_interval: 30s
            max_elapsed_time: 300s
        tls:
            insecure: true

service:
    pipelines:
        traces:
            receivers: [ otlp ]
            processors:
                - memory_limiter
                - batch/traces
            exporters: [ otlp/tempo ]

        metrics:
            receivers: [ prometheus, otlp, prometheus/internal ]
            processors:
                - memory_limiter
                - batch/metrics
            exporters: [ prometheusremotewrite ]

        logs:
            receivers: [ otlp ]
            processors:
                - memory_limiter
                - batch/logs
                - resource/cleanup
                - attributes/cleanup
            exporters: [ otlphttp/loki ]

    extensions: [ health_check, pprof, zpages ]

extensions:
    health_check:
        endpoint: 0.0.0.0:13133
    pprof:
        endpoint: 0.0.0.0:1777
    zpages:
        endpoint: 0.0.0.0:55679