name: Деплой на production сервер

on:
    workflow_dispatch:
        inputs:
            release_tag:
                description: 'Тег для деплоя (например, v1.0.0)'
                required: true
                type: string
            release_id:
                description: 'Release ID из базы данных'
                required: true
                type: string

env:
    SERVICE_NAME: ${{ github.event.repository.name }}
    SYSTEM_REPO: name-system
    TAG_NAME: ${{ github.event.inputs.release_tag }}
    RELEASE_ID: ${{ github.event.inputs.release_id }}

jobs:
    deploy-to-production:
        runs-on: self-hosted

        steps:
            -   name: 📥 Checkout кода
                uses: actions/checkout@v4
                with:
                    ref: ${{ github.ref }}
                    fetch-depth: 0

            -   name: ✅ Валидация входных параметров
                run: |
                    source .github/scripts/on-approve-manual-testing/validator.sh
                    validate_inputs

            -   name: ⚙️ Загрузка конфигурации
                run: |
                    source .github/scripts/on-approve-manual-testing/load_config.sh
                    load_server_config

            -   name: 🚀 Деплой на production сервер
                id: deploy_step
                run: |
                    source .github/scripts/on-approve-manual-testing/deploy.sh
                    source .github/scripts/on-approve-manual-testing/release_tg_bot_api.sh
                    start_deploy
                    deploy_to_server

            -   name: 🎉 Уведомление об успехе
                if: success()
                run: |
                    source .github/scripts/on-approve-manual-testing/release_tg_bot_api.sh
                    source .github/scripts/on-approve-manual-testing/deploy.sh
                    update_release_status "deployed"
                    
                    echo ""
                    echo "╔════════════════════════════════════════════════════════════╗"
                    echo "║       PRODUCTION ДЕПЛОЙ ЗАВЕРШЕН УСПЕШНО! 🎉             ║"
                    echo "╚════════════════════════════════════════════════════════════╝"
                    echo ""
                    echo "✅ Тег ${{ env.TAG_NAME }} развернут на production"
                    echo "✅ Миграции применены"
                    echo "✅ Health check пройден"
                    
                    verify_deployment_success

            -   name: ❌ Уведомление об ошибке
                if: failure()
                run: |
                    source .github/scripts/on-approve-manual-testing/deploy.sh
                    
                    echo ""
                    echo "╔════════════════════════════════════════════════════════════╗"
                    echo "║       PRODUCTION ДЕПЛОЙ ЗАВЕРШЕН С ОШИБКОЙ! ❌           ║"
                    echo "╚════════════════════════════════════════════════════════════╝"
                    echo ""
                    echo "❌ Деплой тега ${{ env.TAG_NAME }} не удался"
                    
                    
                    handle_deployment_failure
                    
                    if [ "${{ env.PREVIOUS_TAG_AVAILABLE }}" == "true" ]; then
                      echo "🔄 Выполнен автоматический откат на ${{ env.PREVIOUS_TAG }}"
                    fi
                    echo ""
                    echo "🔍 Логи для диагностики:"
                    echo "   GitHub Actions: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                    echo "   Сервер: /var/log/deployments/production/${{ env.SERVICE_NAME }}/${{ env.TAG_NAME }}.log"
                    echo ""